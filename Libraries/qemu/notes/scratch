--- Installers
-drive index=0,media=cdrom,if=ide,file=/mnt/software/os/windows/Win10_1903_V1_English_x64.iso \
-drive index=1,media=cdrom,if=ide,file=/mnt/software/os/windows/virtio-win-0.1.171.iso \

--- VFIO passthrough

-- Intel on-board Audio
Q: Needs ACS patch?
A: Yes
Q: Good idea?
A: On-board audio card may outperform Gpu audio quality with frequency, SNR, etc, however
   For convenience, prefer hooking speakers/headphones up via displayport/hdmi to monitors.. then monitor acts as switch..
   Otherwise, passing through the on-board card means the host OS cannot use it.. unless you go through vfio start/stop scripts..
   Also could use emulation to PulseAudio server, but the Qemu emulated device by default has distortion.. backend needs patches which work ok, but not perfect
intel_iommu=on pcie_acs_override=downstream vfio-pci.ids=8086:a170 modprobe.blacklist=i2c_i801,i2c_smbus

-- Nvidia Gpu
Q: Needs ACS patch?
A: Only if doing multiple cards, and the board tries both pci-e lanes as same iommu group
intel_iommu=on vfio-pci.ids=10de:1b81,10de:10f0 modprobe.blacklist=nouveau

-- Intel AHCI (SATA) controller
Q: Needs ACS patch?
A: No
intel_iommu=on vfio-pci.ids=8086:a102 modprobe.blacklist=ahci


-- Audio emulated
-device ich9-intel-hda \
-device hda-output \

--- PulseAudio (requires Audio emulated)
# /etc/pulse/default.pa
#load-module module-native-protocol-unix
load-module module-native-protocol-unix auth-anonymous=1

# export of define these
QEMU_AUDIO_DRV=pa
QEMU_PA_SERVER=unix:/run/user/1000/pulse/native


--- Spice (requires Audio emulated)
QEMU_AUDIO_DRV=spice


--- USB emulated
-usb \
-device usb-kbd \
-device usb-tablet \

--- Or, try mouse instead of touchscreen, but needs to grab focus
--- Since this pointing device is relative, tablet is absolute
-device usb-mouse \

--- USB Device passthrough
-usb \
-- Corsair Watercooler
-device usb-host,vendorid=0x1b1c,productid=0x0c09 \

-- Holtek (Ducky) Keyboard
-device usb-host,vendorid=0x04d9,productid=0x0171 \
-- Razer Mouse
-device usb-host,vendorid=0x1532,productid=0x005c \


--- GPU VFIO passthrough

    , '-vga none'

    , '-device vfio-pci,host=01:00.0,multifunction=on'
    , '-device vfio-pci,host=01:00.1'

    , '-display none'
    , '-monitor none'


--- Intel USB Controller
-device vfio-pci,host=00:14.0 \

--- AsMedia USB Controller
-device vfio-pci,host=04:00.0 \


--- Test discard

./blktrace -a discard -d /dev/disk/by-id/ata-Samsung_SSD_840_PRO_Series_S12PNEAD233247L -o - | ./blkparse -i -


---NOT IN USE---

--- Virtio SCSI block passthrough example:

Q: Why not use?
A: My passthrough block discs are SATA, not SCSI, so they ignore the SCSI write commands like unmap

    ,'-device virtio-scsi-pci,id=scsi'
    ,'-blockdev raw,node-name=disk.0,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-OCZ-VERTEX4_OCZ-2XADXOXL0VW28L28'
    ,'-device scsi-block,drive=disk.0'
    ,'-blockdev raw,node-name=disk.1,cache.direct=on,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-TOSHIBA_HDWD110_57MA5JAFS'
    ,'-device scsi-block,drive=disk.1'

--- Emulate NVMe example:

Q: Why not use?
A: Although Qemu NVMe emulator does support dicard as part of write zeroes support.. it does not seem to work or get called in Windows for retrim
A: Also, Windows has a behavior where each controller needs to be on its own PCIe root port.. or that is needed since each NVMe has its own controller?? not sure:
A: Qemu now lets you passthrough physical NVMe storage controllers.. so emulating them is kind of pointless

# https://bugs.launchpad.net/qemu/+bug/1576347

# use a -monitor and type 'info pci' to see the 0xFFFF bus addresses when putting multiple in one controller..

-- separate controller example:

    ,'-device pcie-root-port,id=pcie.rp.0,chassis=0'
    ,'-blockdev raw,node-name=disk.0,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-Samsung_SSD_840_PRO_Series_S12PNEAD233247L'
    ,'-device nvme,drive=disk.0,bus=pcie.rp.0,serial=0'
    ,'-device pcie-root-port,id=pcie.rp.1,chassis=1'
    ,'-blockdev raw,node-name=disk.1,cache.direct=on,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-WDC_WD10EZEX-08M2NA0_WD-WCC3F3807759'
    ,'-device nvme,drive=disk.1,bus=pcie.rp.1,serial=1'


---IN USE---

--- Emulate IDE hd example:

Q: Why no PCI ahci controller is specified?
A: Q35 machine type turns one on by default no matter what.. limited to 6 ports

    ,'-blockdev raw,node-name=disk.0,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-Crucial_CT128M550SSD1_14190C20D466'
    ,'-device ide-hd,drive=disk.0'
    ,'-blockdev raw,node-name=disk.1,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-ST1000DM003-1CH162_Z1DB81K9'
    ,'-device ide-hd,drive=disk.1'

--- Virtio SCSI hd example:

    , '-device virtio-scsi-pci'

    , '-blockdev raw,node-name=disk0,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-WDC_WDS500G2B0A-00SM50_181265803048'
    , '-device scsi-hd,drive=disk0,rotation_rate=1'

    , '-blockdev raw,node-name=disk1,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-Seagate_SSD_NB120Y5F'
    , '-device scsi-hd,drive=disk1,rotation_rate=1'

--- Virtio SCSI file example:

Q: Why in this one you turn on Write-zeroes detect?
A: Because it is backed by a file, so I want it as tiny as possible
A: The passthrough block backed ones, turned off since it causes wear/tear/slowness to run discard all the time.. and also my SATA SSDs do not support regular Write-Zero anyway

    ,'-device virtio-scsi-pci,id=scsi'
    ,"-blockdev raw,node-name=disk.0,cache.direct=off,discard=unmap,detect-zeroes=unmap,file.driver=file,file.aio=threads,file.filename=$configDir/os.raw"
    ,'-device scsi-hd,drive=disk.0'
    ,"-blockdev raw,node-name=disk.1,cache.direct=off,discard=unmap,detect-zeroes=unmap,file.driver=file,file.aio=threads,file.filename=$configDir/data.raw"
    ,'-device scsi-hd,drive=disk.1'


Q: When to use aio=threads vs aio=native?
A: Native is slightly faster on preallocated files using RAW or QCOW2, or block devices..
        none = cache.direct=on, file.aio=native
    Otherwise, threads, the default, is faster because it blocks less..
        writeback = cache.direct=off, file.aio=threads
    The Default of device write-cache options is on already
A: Also, you do not want to do native with cache direct on for files..
    that leaves open a write hole

I decided to passthrough the SATA controller since it is faster than all the emulation options of Qemu's IDE..
Which defaults to SATA 1.5, and 512 byte sectors, etc..

But care must be taken, especially with Windows, when installing the OS on a drive.. if it detects other open partitions on other drivers, it puts its page file there without asking you.. stupid..


--- Virtio SCSI mixed example (SSD block / HDD file)

,'-device virtio-scsi-pci,id=scsi'
,'-blockdev raw,node-name=disk.0,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-WDC_WDS500G2B0A-00SM50_181265803048'
,'-device scsi-hd,drive=disk.0,rotation_rate=1'
,"-blockdev raw,node-name=disk.1,cache.direct=off,file.driver=file,file.aio=threads,file.filename=$dataDir/data.raw"
,'-device scsi-hd,drive=disk.1'

--- IDE mixed example (SSD block / HDD file)

,'-blockdev raw,node-name=disk.0,cache.direct=on,discard=unmap,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-WDC_WDS500G2B0A-00SM50_181265803048'
,'-device ide-hd,drive=disk.0,rotation_rate=1'
,'-blockdev raw,node-name=disk.1,cache.direct=on,file.driver=host_device,file.aio=native,file.filename=/dev/disk/by-id/ata-TOSHIBA_HDWE160_X746K8ZTF56D-part1'
,'-device ide-hd,drive=disk.1'


x-vga=on is not needed for vfio-pci when used with OVMF UEFI.. UEFI does not need VGA arbitration..


clock already defaults to this behavior.. and so do Linux and MacOS.. Windows needs a registry setting..

-rtc base=utc,clock=host

---
CPU
---

kvm=on/off = defaults to on, means 'do not try to hide the kvm features from OS'..
    Window (and Linux??)
        Regardless of this setting, Windows knows it is in a vm
        But when off, Nvidia does not
        A better was to enable Nvidia is to set hv_vendor_id to something, so relavent Hyper-V features can be enabled
    MacOS
        Needs to be set to on, since cpu type is not 'host', so that vmware-cpuid-freq, which is on by default, will work
            Otherwise, MacOS sets the cpu frequency wrong, and everything runs too fast

so for MacOS:

-cpu Penryn,vendor=GenuineIntel,hv_vendor_id=QemuKvm,kvm=on,vmware-cpuid-freq=on,+invtsc

which, when using pc-q35-2.9+, is the same as:

-cpu Penryn,vendor=GenuineIntel,hv_vendor_id=QemuKvm,+invtsc

for Windows or Linux:

-cpu host,kvm=off

or, better yet, and closer to MacOS:

-cpu host,vendor=GenuineIntel,hv_vendor_id=QemuKvm


Q: Why not virtio instead of usb?
A: OMVF lacks support for virtio for now.. so no bootloaders can use it yet..
A: Only the Tablet one is very useful, since on x86 the Keyboard and Mouse ones are already PS2..

Q: Why not pass through evdev through virtio instead of usb?
A: Passing through the evdev may have less latency than passing through usb, but the usb devices often break down into multiple evdev devices.. so passing only one of their evdev descriptors skips some of their features, or unique device driver capabilities..